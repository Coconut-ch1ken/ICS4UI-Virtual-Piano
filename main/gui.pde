/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:532677:
  appc.background(230);
} //_CODE_:window1:532677:

public void pitchUpButtonClick(GButton source, GEvent event) { //_CODE_:button1:698857:
  pitch = min(7, pitch+1);
} //_CODE_:button1:698857:

public void pitchDownButton_click(GButton source, GEvent event) { //_CODE_:button2:257714:
  pitch = max(1, pitch-1);
} //_CODE_:button2:257714:

public void setVolumn(GCustomSlider source, GEvent event) { //_CODE_:vol:928319:
  volume = vol.getValueF();
} //_CODE_:vol:928319:

public void startRecordingButton_click(GButton source, GEvent event) { //_CODE_:button3:353666:
  recorder.beginRecord();
} //_CODE_:button3:353666:

public void stopRecordingButton_click(GButton source, GEvent event) { //_CODE_:button4:273573:
  recorder.endRecord(); 
  recorder.save();
  
  minim.stop();
  super.stop();
} //_CODE_:button4:273573:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 400, 300, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  button1 = new GButton(window1, 298, 28, 80, 30);
  button1.setText("Pitch Up");
  button1.addEventHandler(this, "pitchUpButtonClick");
  button2 = new GButton(window1, 300, 67, 80, 30);
  button2.setText("Pitch Down");
  button2.addEventHandler(this, "pitchDownButton_click");
  vol = new GCustomSlider(window1, 13, 33, 100, 40, "grey_blue");
  vol.setLimits(0.5, 0.0, 1.0);
  vol.setNumberFormat(G4P.DECIMAL, 2);
  vol.setOpaque(false);
  vol.addEventHandler(this, "setVolumn");
  button3 = new GButton(window1, 18, 170, 80, 29);
  button3.setText("Start Recording");
  button3.addEventHandler(this, "startRecordingButton_click");
  button4 = new GButton(window1, 16, 206, 80, 30);
  button4.setText("Stop Recording");
  button4.addEventHandler(this, "stopRecordingButton_click");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GButton button1; 
GButton button2; 
GCustomSlider vol; 
GButton button3; 
GButton button4; 
